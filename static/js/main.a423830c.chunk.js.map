{"version":3,"sources":["components/Navbar.js","components/Home.js","components/About.js","components/Contact.js","components/parent.js","components/Click.js","components/Hover.js","App.js","serviceWorker.js","index.js"],"names":["Tick","className","Date","toLocaleTimeString","Navbar","to","Home","About","Contact","Parent","Original","props","handler","setState","prevState","count","state","this","React","Component","style","width","margin","onClick","onMouseOver","App","path","component","Boolean","window","location","hostname","match","setInterval","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6OAEA,SAASA,IACP,OACE,yBAAKC,UAAU,UAChB,4BACG,iCAAM,IAAIC,MAAOC,qBAAjB,MAQN,IA8BeC,EA9BA,WACb,OACE,6BACA,yBAAKH,UAAU,4BACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAb,gBACA,wBAAIA,UAAU,SAEd,4BACM,kBAAC,IAAD,CAAMI,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,eAMT,6BACA,kBAACL,EAAD,S,OCrBUM,EAZF,WACX,OACE,6BACE,yBAAKL,UAAU,aACb,wBAAIA,UAAU,UAAd,QACA,goCCkBOM,EAvBD,WACZ,OACE,6BACE,yBAAKN,UAAU,aACb,wBAAIA,UAAU,UAAd,SACA,wlCCMOO,EAZC,WACd,OACE,6BACE,yBAAKP,UAAU,aACb,wBAAIA,UAAU,UAAd,WACA,ioCCsBOQ,EA3BF,SAACC,GAsBZ,OAtBwB,kDAExB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMPC,QAAQ,WACP,EAAKC,UAAS,SAACC,GACb,MAAO,CAACC,MAAMD,EAAUC,MAAM,OANhC,EAAKC,MAAQ,CACVD,MAAM,GAJQ,EAFK,qDAiBtB,OACE,kBAACL,EAAD,CAAUK,MAAOE,KAAKD,MAAMD,MAAOH,QAASK,KAAKL,cAlB7B,GACRM,IAAMC,YCcTV,I,uKAbH,IAAD,EACcQ,KAAKN,MAAtBI,EADG,EACHA,MAAMH,EADH,EACGA,QACV,OACE,yBAAKQ,MAAQ,CACXC,MAAM,QACNC,OAAO,UACLrB,UAAU,UACZ,4BAAQA,UAAU,aAAcsB,QAASX,GAAzC,WAA2DG,EAA3D,e,GATaI,cCWNV,IAXf,uKACY,IAAD,EACYQ,KAAKN,MAApBI,EADG,EACHA,MAAMH,EADH,EACGA,QACV,OACE,6BACE,wBAAIX,UAAU,SAASuB,YAAaZ,GAApC,6BAAwEG,QALhF,GAA2BI,cCgCZM,E,uKArBX,OACE,kBAAC,IAAD,KACE,yBAAKxB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOyB,KAAK,QAAQC,UAAWrB,IAC/B,kBAAC,IAAD,CAAQoB,KAAK,SAASC,UAAWpB,IACjC,kBAAC,IAAD,CAAQmB,KAAK,WAAWC,UAAWnB,IACnC,kBAAC,IAAD,CAAUH,GAAG,YAIf,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAlBQc,aCGES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJNC,aATA,WACEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,WAIX,KDqHX,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a423830c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Tick() {\r\n  return (\r\n    <div className=\"center\">\r\n   <p></p>\r\n      <h2> {new Date().toLocaleTimeString()}.</h2>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n    <nav className=\"nav-wrapper red darken-3\">\r\n      <div className=\"container\">\r\n        <a className=\"brand-logo\">SS Creations</a>\r\n        <ul className=\"right\">\r\n\r\n        <li>\r\n              <Link to=\"/home\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact\">Contact</Link>\r\n            </li>\r\n            </ul>\r\n      </div>\r\n    </nav> \r\n\r\n     <div>\r\n     <Tick/>\r\n     </div>\r\n  \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar","  \r\nimport React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">Home</h4>\r\n        <p>\r\n        he inspiration for this project has been drawn from Idries Shah’s wonderful collection of stories, World Tales. A best-seller when it was published in 1991, the richly illustrated book drew together traditional stories that have appeared, ‘in all times, in all places’, transcending mere national boundaries. Building on this concept, the World Tales Story Bank will capitalise on the power of the internet to demonstrate how stories constitute a world heritage with the power to bind humanity. Modelled on the great seed-banks in Svalbard and Kew Gardens, ISF will upload and store all of the world’s ancient stories. Access to this invaluable resource will be free – and through an interactive website, children and educators alike will be able to read and listen to tales drawn from across the ages and learn about the lands and cultures that nurtured them.Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","  \r\nimport React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">About</h4>\r\n        <p>ISF is devoted to championing a sense of imagination, and to teaching stories – the kind of which are contained in the large published corpus of the writer and thinker, Idries Shah.\r\n\r\n \r\n\r\nEngaged in a wide range of charitable projects on a world-wide basis, the Foundation seeks to stimulate the minds of both young and old by regarding the world in new ways.\r\n\r\n \r\n\r\nIn collaboration with UNESCO, ISF has begun a major story-writing competition for children in five languages and 180 countries. Other projects are working to give illustrated books to kids in Afghanistan and other conflict zones on a mass scale, thereby sparking the innate sense of imagination in young minds.\r\n\r\n \r\n\r\nYet another endeavour is striving to build the first global StoryBank – bridging disparate societies through stories – which we regard as the essence of all culture.Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">Contact</h4>\r\n        <p>ISF is devoted to championing a sense of imagination, and to teaching stories – the kind of which are contained in the laTo get started with React Router in a web app, you’ll need a React web app. If you need to create one, we recommend you try Create React App. It’s a popular tool that works really well with React Router.To get started with React Router in a web app, you’ll need a React web app. If you need to create one, we recommend you try Create React App. It’s a popular tool that works really well with React Router.To get started with React Router in a web app, you’ll need a React web app. If you need to create one, we recommend you try Create React App. It’s a popular tool that works really well with React Router.To get started with React Router in a web app, you’ll need a React web app. If you need to create one, we recommend you try Create React App. It’s a \r\nYet another endeavour is striving to build the first global StoryBank – bridging ptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\n\r\nconst Parent=(Original)=> {\r\nclass New extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       count:0\r\n    }\r\n  }\r\n   handler=()=>{\r\n    this.setState((prevState)=>{\r\n      return {count:prevState.count+1}\r\n    }\r\n      )\r\n   \r\n  }\r\n  render(){\r\n    return(\r\n      <Original count={this.state.count} handler={this.handler} />\r\n    );\r\n  }\r\n}\r\n  return (\r\n   New\r\n  )\r\n}\r\n\r\nexport default Parent\r\n","import React, { Component } from 'react'\r\nimport Parent from './parent';\r\n class Click extends Component {\r\n\r\n  render() {\r\n   var {count,handler} = this.props;\r\n    return (\r\n      <div style={ {\r\n        width:'300px',\r\n        margin:'0 auto'\r\n       }} className=\"center\">\r\n        <button className=\"container \"  onClick={handler}>clicked {count} times</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Parent(Click)\r\n","import React, { Component } from 'react';\r\nimport Parent from './parent';\r\nexport class Hover extends Component {\r\n  render() {\r\n   var {count,handler}=this.props;\r\n    return (\r\n      <div>\r\n        <h4 className=\"center\" onMouseOver={handler}> Bring the mouse on to me {count}</h4>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Parent(Hover)\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport { Route,Redirect,Switch } from 'react-router-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Click from './components/Click';\nimport Hover from './components/Hover';\nclass App extends Component {\n  \n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n          <Route path=\"/home\" component={Home}/>\n          <Route  path='/about' component={About}/>\n          <Route  path='/contact' component={Contact} />\n          <Redirect to='/home' />\n          </Switch>\n      \n        </div>\n        <div>\n          <Click />\n          <Hover />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nfunction Sha(){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nsetInterval(Sha, 1000);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}